#Parameters for CAMB

#output_root is prefixed to output file names
output_root = CAMB_TEMPLATE_OUTROOT

#What to do
get_scalar_cls = T
get_vector_cls = F
get_tensor_cls = F
get_transfer   = T

#if do_lensing then scalar_output_file contains additional columns of l^4 C_l^{pp} and l^3 C_l^{pT}
#where p is the projected potential. Output lensed CMB Cls (without tensors) are in lensed_output_file below.
do_lensing     = F

# 0: linear, 1: non-linear matter power (HALOFIT), 2: non-linear CMB lensing (HALOFIT)
do_nonlinear = 0

#Maximum multipole and k*eta.
#  Note that C_ls near l_max are inaccurate (about 5%), go to 50 more than you need
#  Lensed power spectra are computed to l_max_scalar-100
#  To get accurate lensed BB need to have l_max_scalar>2000, k_eta_max_scalar > 10000
#  Otherwise k_eta_max_scalar=2*l_max_scalar usually suffices, or don't set to use default
l_max_scalar      = 2000
#k_eta_max_scalar  = 4000

#  Tensor settings should be less than or equal to the above
l_max_tensor      = 1500
k_eta_max_tensor  = 3000

#Main cosmological parameters, neutrino masses are assumed degenerate
# If use_phyical set phyiscal densities in baryone, CDM and neutrinos + Omega_k
use_physical   = T
ombh2          = CAMB_TEMPLATE_OMBH2
omch2          = CAMB_TEMPLATE_OMCH2
omnuh2         = CAMB_TEMPLATE_OMNUH2
omk            = 0.0
hubble         = CAMB_TEMPLATE_H0
#effective equation of state parameter for dark energy, assumed constant (of no use)
w              = -100000
#method of specifying w(a), T: use w_0, w_a parameterization, F: read from a file
usew0wa = T
#if usew0wa = T, read in w_0, w_a
w0             = CAMB_TEMPLATE_W0
wa             = CAMB_TEMPLATE_WA
#if usew0wa = F, read (a,w) from the following user-supplied file
wafile = wa.dat
#constant comoving sound speed of the dark energy (1=quintessence)
cs2_lam        = 1

#if use_physical = F set parameters as here
#omega_baryon   = 0.0
#omega_cdm      = 0.0
#omega_lambda   = 0.0
#omega_neutrino = 0.0

temp_cmb           = CAMB_TEMPLATE_TCMB
helium_fraction    = 0.24
# massless_neutrinos is the effective number (for QED + non-instantaneous decoupling)
# fractional part of the number is used to increase the neutrino temperature, e.g.
# 2.99 correponds to 2 neutrinos with a much higher temperature, 3.04 correponds to
# 3 neutrinos with a slightly higher temperature. 3.046 is consistent with CosmoMC.
massless_neutrinos = CAMB_TEMPLATE_MASSLESS_NU
massive_neutrinos  = CAMB_TEMPLATE_MASSIVE_NU

#Neutrino mass splittings
nu_mass_eigenstates = 1
#nu_mass_degeneracies = 0 sets nu_mass_degeneracies = massive_neutrinos
#otherwise should be an array
#e.g. for 3 neutrinos with 2 non-degenerate eigenstates, nu_mass_degeneracies = 2 1
nu_mass_degeneracies = 0
#Fraction of total omega_nu h^2 accounted for by each eigenstate, eg. 0.5 0.5
nu_mass_fractions = 1

#Initial power spectrum, amplitude, spectral index and running. Pivot k in Mpc^{-1}.
initial_power_num         = 1
pivot_scalar              = 0.05
pivot_tensor              = 0.05
scalar_amp(1)             = 2.15903458773893e-9
scalar_spectral_index(1)  = CAMB_TEMPLATE_NS
scalar_nrun(1)            = 0
tensor_spectral_index(1)  = 0
#ratio is that of the initial tens/scal power spectrum amplitudes
initial_ratio(1)          = 1
#note vector modes use the scalar settings above


#Reionization, ignored unless reionization = T, re_redshift measures where x_e=0.5
reionization         = T

re_use_optical_depth = T
re_optical_depth     = 0.09296
#If re_use_optical_depth = F then use following, otherwise ignored
re_redshift          = 11
#width of reionization transition. CMBFAST model was similar to re_delta_redshift~0.5.
re_delta_redshift    = 1.5
#re_ionization_frac=-1 sets to become fully ionized using YHe to get helium contribution
#Otherwise x_e varies from 0 to re_ionization_frac
re_ionization_frac   = -1


#RECFAST 1.5 recombination parameters;
RECFAST_fudge = 1.14
RECFAST_fudge_He = 0.86
RECFAST_Heswitch = 6
RECFAST_Hswitch  = T

#Initial scalar perturbation mode (adiabatic=1, CDM iso=2, Baryon iso=3,
# neutrino density iso =4, neutrino velocity iso = 5)
initial_condition   = 1
#If above is zero, use modes in the following (totally correlated) proportions
#Note: we assume all modes have the same initial power spectrum
initial_vector = -1 0 0 0 0

#For vector modes: 0 for regular (neutrino vorticity mode), 1 for magnetic
vector_mode = 0

#Normalization
COBE_normalize = F
##CMB_outputscale scales the output Cls
#To get MuK^2 set realistic initial amplitude (e.g. scalar_amp(1) = 2.3e-9 above) and
#otherwise for dimensionless transfer functions set scalar_amp(1)=1 and use
#CMB_outputscale = 1
CMB_outputscale = 7.4311e12

#Transfer function settings, transfer_kmax=0.5 is enough for sigma_8
#transfer_k_per_logint=0 sets sensible non-even sampling;
#transfer_k_per_logint=5 samples fixed spacing in log-k
#transfer_interp_matterpower =T produces matter power in regular interpolated grid in log k;
# use transfer_interp_matterpower =F to output calculated values (e.g. for later interpolation)
transfer_high_precision = T
transfer_kmax           = 1
transfer_k_per_logint   = 50
transfer_num_redshifts  = 33
transfer_interp_matterpower = T

transfer_redshift(1) = 200
transfer_redshift(2) = 100
transfer_redshift(3) = 50
transfer_redshift(4) = 20
transfer_redshift(5) = 10
transfer_redshift(6) = 5
transfer_redshift(7) = 4
transfer_redshift(8) = 3
transfer_redshift(9) = 2.5
transfer_redshift(10) = 2.0180180180180183
transfer_redshift(11) = 1.8
transfer_redshift(12) = 1.6103896103896105
transfer_redshift(13) = 1.4
transfer_redshift(14) = 1.2
transfer_redshift(15) = 1.0059880239520962
transfer_redshift(16) = 0.8
transfer_redshift(17) = 0.75
transfer_redshift(18) = 0.7
transfer_redshift(19) = 0.655683690280066
transfer_redshift(20) = 0.62
transfer_redshift(21) = 0.58
transfer_redshift(22) = 0.54
transfer_redshift(23) = 0.5
transfer_redshift(24) = 0.47
transfer_redshift(25) = 0.43366619115549243
transfer_redshift(26) = 0.4
transfer_redshift(27) = 0.35
transfer_redshift(28) = 0.3
transfer_redshift(29) = 0.2422744128553771
transfer_redshift(30) = 0.2
transfer_redshift(31) = 0.15
transfer_redshift(32) = 0.10076670317634195
transfer_redshift(33) = 0

transfer_filename(1) = transfer_z200.dat
transfer_filename(2) = transfer_z100.dat
transfer_filename(3) = transfer_z50.dat
transfer_filename(4) = transfer_z20.dat
transfer_filename(5) = transfer_z10.dat
transfer_filename(6) = transfer_z5.dat
transfer_filename(7) = transfer_z4.dat
transfer_filename(8) = transfer_z3.dat
transfer_filename(9) = transfer_z2.5.dat
transfer_filename(10) = transfer_z2.dat
transfer_filename(11) = transfer_z1.8.dat
transfer_filename(12) = transfer_z1.6.dat
transfer_filename(13) = transfer_z1.4.dat
transfer_filename(14) = transfer_z1.2.dat
transfer_filename(15) = transfer_z1.dat
transfer_filename(16) = transfer_z0.8.dat
transfer_filename(17) = transfer_z0.75.dat
transfer_filename(18) = transfer_z0.7.dat
transfer_filename(19) = transfer_z0.66.dat
transfer_filename(20) = transfer_z0.62.dat
transfer_filename(21) = transfer_z0.58.dat
transfer_filename(22) = transfer_z0.54.dat
transfer_filename(23) = transfer_z0.5.dat
transfer_filename(24) = transfer_z0.47.dat
transfer_filename(25) = transfer_z0.43.dat
transfer_filename(26) = transfer_z0.4.dat
transfer_filename(27) = transfer_z0.35.dat
transfer_filename(28) = transfer_z0.3.dat
transfer_filename(29) = transfer_z0.25.dat
transfer_filename(30) = transfer_z0.2.dat
transfer_filename(31) = transfer_z0.15.dat
transfer_filename(32) = transfer_z0.1.dat
transfer_filename(33) = transfer_z0.dat

#Matter power spectrum output against k/h in units of h^{-3} Mpc^3
transfer_matterpower(1) = matterpower_z200.dat
transfer_matterpower(2) = matterpower_z100.dat
transfer_matterpower(3) = matterpower_z50.dat
transfer_matterpower(4) = matterpower_z20.dat
transfer_matterpower(5) = matterpower_z10.dat
transfer_matterpower(6) = matterpower_z5.dat
transfer_matterpower(7) = matterpower_z4.dat
transfer_matterpower(8) = matterpower_z3.dat
transfer_matterpower(9) = matterpower_z2.5.dat
transfer_matterpower(10) = matterpower_z2.dat
transfer_matterpower(11) = matterpower_z1.8.dat
transfer_matterpower(12) = matterpower_z1.6.dat
transfer_matterpower(13) = matterpower_z1.4.dat
transfer_matterpower(14) = matterpower_z1.2.dat
transfer_matterpower(15) = matterpower_z1.dat
transfer_matterpower(16) = matterpower_z0.8.dat
transfer_matterpower(17) = matterpower_z0.75.dat
transfer_matterpower(18) = matterpower_z0.7.dat
transfer_matterpower(19) = matterpower_z0.66.dat
transfer_matterpower(20) = matterpower_z0.62.dat
transfer_matterpower(21) = matterpower_z0.58.dat
transfer_matterpower(22) = matterpower_z0.54.dat
transfer_matterpower(23) = matterpower_z0.5.dat
transfer_matterpower(24) = matterpower_z0.47.dat
transfer_matterpower(25) = matterpower_z0.43.dat
transfer_matterpower(26) = matterpower_z0.4.dat
transfer_matterpower(27) = matterpower_z0.35.dat
transfer_matterpower(28) = matterpower_z0.3.dat
transfer_matterpower(29) = matterpower_z0.25.dat
transfer_matterpower(30) = matterpower_z0.2.dat
transfer_matterpower(31) = matterpower_z0.15.dat
transfer_matterpower(32) = matterpower_z0.1.dat
transfer_matterpower(33) = matterpower_z0.dat

#Output files not produced if blank. make camb_fits to use use the FITS setting.
scalar_output_file = scalCls.dat
vector_output_file = vecCls.dat
tensor_output_file = tensCls.dat
total_output_file  = totCls.dat
lensed_output_file = lensedCls.dat
lensed_total_output_file  =lensedtotCls.dat
lens_potential_output_file = lenspotentialCls.dat
FITS_filename      = scalCls.fits

#Bispectrum parameters if required; primordial is currently only local model (fnl=1)
#lensing is fairly quick, primordial takes several minutes on quad core
do_lensing_bispectrum = F
do_primordial_bispectrum = F

#1 for just temperature, 2 with E
bispectrum_nfields = 1
#set slice non-zero to output slice b_{bispectrum_slice_base_L L L+delta}
bispectrum_slice_base_L = 0
bispectrum_ndelta=3
bispectrum_delta(1)=0
bispectrum_delta(2)=2
bispectrum_delta(3)=4
#bispectrum_do_fisher estimates errors and correlations between bispectra
#note you need to compile with LAPACK and FISHER defined to use get the Fisher info
bispectrum_do_fisher= F
#Noise is in muK^2, e.g. 2e-4 roughly for Planck temperature
bispectrum_fisher_noise=0
bispectrum_fisher_noise_pol=0
bispectrum_fisher_fwhm_arcmin=7
#Filename if you want to write full reduced bispectrum (at sampled values of l_1)
bispectrum_full_output_file=
bispectrum_full_output_sparse=F
#Export alpha_l(r), beta_l(r) for local non-Gaussianity
bispectrum_export_alpha_beta=F

##Optional parameters to control the computation speed,accuracy and feedback

#If feedback_level > 0 print out useful information computed about the model
feedback_level = 1

# 1: curved correlation function, 2: flat correlation function, 3: inaccurate harmonic method
lensing_method = 1
accurate_BB = F


#massive_nu_approx: 0 - integrate distribution function
#                   1 - switch to series in velocity weight once non-relativistic
massive_nu_approx = 1

#Whether you are bothered about polarization.
accurate_polarization   = T

#Whether you are bothered about percent accuracy on EE from reionization
accurate_reionization   = T

#whether or not to include neutrinos in the tensor evolution equations
do_tensor_neutrinos     = T

#Whether to turn off small-scale late time radiation hierarchies (save time,v. accurate)
do_late_rad_truncation   = T

#Computation parameters
#if number_of_threads=0 assigned automatically
number_of_threads       = 0

#Default scalar accuracy is about 0.3% (except lensed BB) if high_accuracy_default=F
#If high_accuracy_default=T the default taget accuracy is 0.1% at L>600 (with boost parameter=1 below)
#Try accuracy_boost=2, l_accuracy_boost=2 if you want to check stability/even higher accuracy
#Note increasing accuracy_boost parameters is very inefficient if you want higher accuracy,
#but high_accuracy_default is efficient

high_accuracy_default=T

#Increase accuracy_boost to decrease time steps, use more k values,  etc.
#Decrease to speed up at cost of worse accuracy. Suggest 0.8 to 3.
accuracy_boost          = 1

#Larger to keep more terms in the hierarchy evolution.
l_accuracy_boost        = 1

#Increase to use more C_l values for interpolation.
#Increasing a bit will improve the polarization accuracy at l up to 200 -
#interpolation errors may be up to 3%
#Decrease to speed up non-flat models a bit
l_sample_boost          = 1
